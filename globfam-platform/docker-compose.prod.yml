version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: globfam-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: globfam
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - globfam-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: globfam-redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - globfam-network
    restart: unless-stopped

  backend:
    image: ${DOCKER_USERNAME}/globfam-backend:latest
    container_name: globfam-backend
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/globfam?schema=public
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      PLAID_CLIENT_ID: ${PLAID_CLIENT_ID}
      PLAID_SECRET: ${PLAID_SECRET}
      PLAID_ENV: ${PLAID_ENV}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      FRONTEND_URL: ${FRONTEND_URL}
      SENTRY_DSN: ${SENTRY_DSN}
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    networks:
      - globfam-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    image: ${DOCKER_USERNAME}/globfam-frontend:latest
    container_name: globfam-frontend
    environment:
      NODE_ENV: production
      VITE_API_URL: ${API_URL}
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - globfam-network
    restart: unless-stopped
    volumes:
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro

  nginx:
    image: nginx:alpine
    container_name: globfam-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - frontend
      - backend
    networks:
      - globfam-network
    restart: unless-stopped

networks:
  globfam-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: